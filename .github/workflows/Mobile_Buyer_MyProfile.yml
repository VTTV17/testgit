name: '[Buyer] My profile'
on:
  workflow_dispatch:
      inputs:
        environment:
          description: 'Environment to run tests'
          default: "STAG"
          type: choice
          options:
            - CA
            - STAG
            - PROD
            - PREPROD
        languageSF:
          description: 'Language on SSR to run tests'
          default: "VIE"
          type: choice
          options:
            - VIE
            - ENG
        languageDB:
          description: 'Language on Dashboard to run tests'
          default: "VIE"
          type: choice
          options:
            - VIE
            - ENG
jobs:
  automation:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the current repository
        uses: actions/checkout@v2
 
      - name: Install OpenVPN
        run: |
          sudo apt update -y
          sudo apt install -y openvpn
 
      - name: Create VPN Credentials File
        run: |
          echo "${{ secrets.VPN_USERNAME }}" > ${{ secrets.VPN_AUTHOR }}
          echo "${{ secrets.VPN_PASSWORD }}" >> ${{ secrets.VPN_AUTHOR }}
          chmod 600 ${{ secrets.VPN_AUTHOR }}
 
      - name: Start OpenVPN
        run: |
          sudo nohup openvpn --verb 4 --config $(pwd)/${{ secrets.VPN_OVPN }} --auth-user-pass $(pwd)/${{ secrets.VPN_AUTHOR }} > $HOME/openvpn.log 2>&1 &
 
      - name: Try connect to Gitlab by VPN
        run: |
          for i in {1..5}; do
           echo "$(curl -Is ${{ secrets.GITLAB_HOST }} | head -1)"
           if grep -q "Initialization Sequence Completed" $HOME/openvpn.log; then
             echo "OpenVPN started successfully."
             break
           fi
           echo "OpenVPN start failed, retrying..."
          done
          cat $HOME/openvpn.log
 
      - name: Clone GitLab repository
        run: |
          git clone ${{ secrets.GITLAB_REPOSITORY }} GoSELL-Automation
 
      - name: Stop OpenVPN
        run: |
          sudo pkill -f openvpn
      - name: Switch to another branch
        run: |
          cd GoSELL-Automation
          git checkout main
      - name: Replace env variables
        run: |
          cd GoSELL-Automation
          sed -i 's|environment=.*|environment=${{ inputs.environment }}|' src/main/resources/config.properties
          sed -i 's|languageSF=.*|languageSF=${{ inputs.languageSF }}|' src/main/resources/config.properties
          sed -i 's|languageDB=.*|languageDB=${{ inputs.languageDB }}|' src/main/resources/config.properties
          sed -i 's|headless=.*|headless=true|' src/main/resources/config.properties
          sed -i 's|enableProxy=.*|enableProxy=false|' src/main/resources/config.properties

      - name: Confirm changes
        run: |
          cd GoSELL-Automation
          cat src/main/resources/config.properties
 
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'
 
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-
 
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu
 
      - name: Install dependencies
        run: |
          cd GoSELL-Automation
          mvn install -DskipTests
      
      - name: Setup Android SDK and Emulator
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          target: default
          emulator-options: '-no-window -gpu swiftshader_indirect'

      - name: Start Android emulator
        run: |
          echo "Starting Android emulator..."
          nohup emulator -avd testAVD -no-window -gpu swiftshader_indirect &
          sleep 60  # Đợi emulator khởi động
      
      - name: Run tests
        run: |
          cd GoSELL-Automation
          mvn --batch-mode test "-DsuiteFile=test_config/android/buyer/BuyerServiceDetail.xml"
          
      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Reports
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html
            **/ExtentReport.html
      - name: Remove cloned repo
        run: |
            rm -r GoSELL-Automation
